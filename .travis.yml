language: node_js
node_js:
  - '10'

env:
  global:
    - NODE_ENV=testing

addons:
  postgresql: "9.6"
  apt:
    packages:
      - postgresql-9.6-postgis-2.4

services:
  - postgresql
  - redis-server

install:
  # install local dependency repos first
  - for x in  "lib/eslint-config-twine" "lib/twine-util"; do cd $x; npm install; cd ../..; done;
  - for x in "api" "dashboard-app" "visitor-app"; do cd $x; npm install; cd ..; done;

before_script:
  - bash .travis/cc-download.sh
  - chmod +x .travis/cc-test-reporter
  - .travis/cc-test-reporter before-build --prefix $(pwd)
  - psql -U postgres -c 'create database twine_api_test'
  - psql -U postgres -c 'create extension postgis'

script:
  - for x in "api" "dashboard-app" "visitor-app" "lib/twine-util"; do cd $x; npm run lint; cd ..; done;
  # complile ts/react
  - for x in "api" "dashboard-app" "visitor-app"; do cd $x; npm run build; cd ..; done;
  # run built server
  - for x in "api"; do cd $x; npm run checks; cd ..; done;
  # run tests and coverage
  - for x in "api" "dashboard-app" "visitor-app" "lib/twine-util"; do cd $x; npm run cover; cd ..; done;

after_success:
  - .travis/cc-test-reporter after-build --prefix $(pwd)

notifications:
  email:
    on_success: never
    on_failure: always
