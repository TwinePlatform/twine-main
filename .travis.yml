language: node_js
node_js:
  - '10'

stages:
  - test
  - upload

env:
  global:
    - NODE_ENV=testing
  matrix:
  - APP_DIR=lib/twine-util
  - APP_DIR=api
  - APP_DIR=dashboard-app
  - APP_DIR=visitor-app

addons:
  postgresql: "9.6"
  apt:
    packages:
      - postgresql-9.6-postgis-2.4

services:
  - postgresql
  - redis-server

install:
  # install local dependency repos first
  - pip install --user awscli
  - for f in lib/*; do cd $f; npm install; cd ../..; done;
  - cd $TRAVIS_BUILD_DIR/$APP_DIR && npm install

before_script:
  - bash $TRAVIS_BUILD_DIR/.travis/cc-download.sh
  - psql -U postgres -c 'create database twine_api_test'
  - psql -U postgres -c 'create extension postgis'

script:
  - cd $TRAVIS_BUILD_DIR/$APP_DIR && npm run lint --if-present
  # complile ts/react
  - cd $TRAVIS_BUILD_DIR/$APP_DIR && npm run build --if-present
  # run built server
  - cd $TRAVIS_BUILD_DIR/$APP_DIR && npm run checks --if-present
  # run tests and coverage
  - cd $TRAVIS_BUILD_DIR/$APP_DIR && npm run cover --if-present

after_success:
  - bash $TRAVIS_BUILD_DIR/.travis/cc-report.sh
  - aws s3 cp $TRAVIS_BUILD_DIR/coverage-* s3://twine-ci/$TRAVIS_BUILD_NUMBER/

jobs:
  include:
    - stage: upload
      addons: skip
      services: skip
      install:
        - pip install --user awscli
      before_script:
        - bash $TRAVIS_BUILD_DIR/.travis/cc-download.sh
      script:
        - aws s3 cp s3://twine-ci/$TRAVIS_BUILD_NUMBER/ ./coverage --recursive
        - ls -al ./coverage
        - bash $TRAVIS_BUILD_DIR/.travis/cc-upload.sh
      after_success:
        - aws s3 rm s3://twine-ci/$TRAVIS_BUILD_NUMBER --recursive
      after_failure:
        - aws s3 rm s3://twine-ci/$TRAVIS_BUILD_NUMBER --recursive

notifications:
  email:
    on_success: never
    on_failure: always
